global
    maxconn 4096
    log 10.42.24.10:1514 local2

defaults
    log global
    timeout connect  5000
    timeout client  10000
    timeout server  10000

resolvers dns
    nameserver rancher 169.254.169.250:53
    hold valid 1s

listen statistics
    bind *:8008
    mode http
    stats enable
    stats uri /stats

listen postgres_rw
    bind *:5432
    mode tcp
    option tcp-smart-connect
    timeout client  {{ getenv "TIMEOUT" }}
    timeout server  {{ getenv "TIMEOUT" }}
    balance leastconn
{{range ls "/self/stack/services/postgres/containers"}}
    server {{.}} {{.}}:5432 resolvers dns check fastinter 1s
{{end}}

    option tcp-check

    # https://www.postgresql.org/docs/10/protocol-flow.html
    # https://www.postgresql.org/docs/devel/static/protocol-message-formats.html can help you understand the following

    # Send A StartUp message with the following arguments:
    # * Size(Int32): 2F
    # * Protocol Version(Int32): 3.0
    # * user=healthcheck
    # * database=healthcheck
    tcp-check comment     Sending\ StartUp\ message
    tcp-check send-binary 0000002f # Size of StartUp message
    tcp-check send-binary 00030000 # Protocol version 3.0
    tcp-check send-binary 75736572006865616c7468636865636b00         # user\00healthcheck\00
    tcp-check send-binary 6461746162617365006865616c7468636865636b00 # database\00healthcheck\00
    tcp-check send-binary 00 # end message with \00
    tcp-check comment     StartUp\ message\ sent.

    # Send a Query message with the followwing arguments:
    # * Message Type(Byte1): Q
    # * Size(Int32): 53
    # * Query: SELECT CASE WHEN pg_is_in_recovery() THEN 'i_am_slave' ELSE 'i_am_master' END;
    tcp-check comment     Sending\ QUERY\ slave\ or\ master?
    tcp-check send-binary 51 # Message Type Query 'Q'
    tcp-check send-binary 00000053
    # SELECT CASE WHEN pg_is_in_recovery() THEN 'i_am_slave' ELSE 'i_am_master' END;
    tcp-check send-binary 53454c4543542043415345205748454e2070675f69735f696e5f7265
    tcp-check send-binary 636f766572792829205448454e2027695f616d5f736c617665272045
    tcp-check send-binary 4c53452027695f616d5f6d61737465722720454e443b
    tcp-check send-binary 00 # end message with \00

    # Send a Terminate message with the following arguments:
    # * Message Type(Byte1): X
    # * Size(Int32): 4
    tcp-check send-binary 58 # Message type Terminate 'X'
    tcp-check send-binary 00000004 # Size of the message
    tcp-check comment     Query\ sent.\ Waiting\ response.

    # Test node state
    tcp-check expect string i_am_master


listen postgres_ro
    bind *:5433
    mode tcp
    option tcp-smart-connect
    timeout client  10800s
    timeout server  10800s
    balance leastconn
{{range ls "/self/stack/services/postgres/containers"}}
    server {{.}} {{.}}:5432 resolvers dns check fastinter 1s
{{end}}
{{ if eq (getenv "RO_REPLICAS_ONLY") "true" }}
    option tcp-check

    # Send A StartUp message with the following arguments:
    # * Size(Int32): 2F
    # * Protocol Version(Int32): 3.0
    # * user=healthcheck
    # * database=healthcheck
    tcp-check comment     Sending\ StartUp\ message
    tcp-check send-binary 0000002f # Size of StartUp message
    tcp-check send-binary 00030000 # Protocol version 3.0
    tcp-check send-binary 75736572006865616c7468636865636b00         # user\00healthcheck\00
    tcp-check send-binary 6461746162617365006865616c7468636865636b00 # database\00healthcheck\00
    tcp-check send-binary 00 # end message with \00
    tcp-check comment     StartUp\ message\ sent.

    # Send a Query message with the followwing arguments:
    # * Message Type(Byte1): Q
    # * Size(Int32): 53
    # * Query: SELECT CASE WHEN pg_is_in_recovery() THEN 'i_am_slave' ELSE 'i_am_master' END;
    tcp-check comment     Sending\ QUERY\ slave\ or\ master?
    tcp-check send-binary 51 # Message Type Query 'Q'
    tcp-check send-binary 00000053
    # SELECT CASE WHEN pg_is_in_recovery() THEN 'i_am_slave' ELSE 'i_am_master' END;
    tcp-check send-binary 53454c4543542043415345205748454e2070675f69735f696e5f7265
    tcp-check send-binary 636f766572792829205448454e2027695f616d5f736c617665272045
    tcp-check send-binary 4c53452027695f616d5f6d61737465722720454e443b
    tcp-check send-binary 00 # end message with \00

    # Send a Terminate message with the following arguments:
    # * Message Type(Byte1): X
    # * Size(Int32): 4
    tcp-check send-binary 58 # Message type Terminate 'X'
    tcp-check send-binary 00000004 # Size of the message
    tcp-check comment     Query\ sent.\ Waiting\ response.

    # Test node state
    tcp-check expect string i_am_slave
{{ else }}
    option pgsql-check user postgres
{{ end }}
